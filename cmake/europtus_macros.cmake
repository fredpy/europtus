macro(truncate_dir var dir base)
  # Make sure that dirt has one and only one trailing slash
  string(REGEX REPLACE "//*" "/" dir "${dir}")
  string(REGEX REPLACE "/$" "" dir "${dir}")
  set(result "${dir}")

  string(REGEX REPLACE "//*" "/" base "${base}")
  string(REGEX REPLACE "/$" "" base "${base}")

  if( dir )
    set(xdir "${dir}/")
    set(xbase "${base}/")
  
    if("${xdir}" STREQUAL "${xbase}")
      set(result "")
    else()
      string(LENGTH "${xdir}" dir_len)
      string(LENGTH "${xbase}" base_len)


      if(dir_len GREATER ${base_len})
	string(SUBSTRING ${xdir} 0 ${base_len} tmp)
	if(tmp STREQUAL "${xbase}")
	  math(EXPR len "${dir_len} - ${base_len}")
	  string(SUBSTRING "${xdir}" ${base_len} ${len} result)
	endif()
      endif()
    endif()
  endif()

  set(${var} "${result}")
endmacro(truncate_dir)

macro(organize_target target)
  get_target_property(src ${target} SOURCES)
       
  foreach(file ${src})
    if(NOT IS_DIRECTORY ${file})
      get_filename_component(dir ${file} PATH)
      get_filename_component(ext ${file} EXT)

      if(dir)
	truncate_dir(short_dir ${dir} ${CMAKE_CURRENT_SOURCE_DIR})
	if(short_dir STREQUAL ${dir})
	  truncate_dir(short_dir ${dir} ${CMAKE_CURRENT_BINARY_DIR})
	endif()
	set(dir "${short_dir}")	
      endif(dir)
      if(dir)
      endif(dir)

      # Check if header
      string(REGEX MATCH "^\\.(h|hh|hpp)$" header "${ext}")
      if(header)
        if(dir)
          truncate_dir(h_dir ${dir} "include")
          if( "${h_dir}" STREQUAL "${dir}" )
            truncate_dir(h_dir ${dir} "src")
          endif()
          string(REPLACE "/" "\\" dir "${h_dir}")
          source_group("Header\ Files\\${dir}" FILES ${file})
        endif(dir)
      else(header)
        string(REGEX MATCH "^\\.(c|cc|cpp)$" source "${ext}")
        if(source)
          if(dir)
            truncate_dir(c_dir ${dir} "src")
            string(REPLACE "/" "\\" dir "${c_dir}")
            source_group("Source\ Files\\${dir}" FILES ${file})
          endif(dir)
        else(source)
          string(REGEX MATCH "^\\.tcc$" template "${ext}")
          if(template)
            truncate_dir(h_dir ${dir} "include")
            string(REPLACE "/" "\\" dir "${h_dir}")
            source_group("Template\ Files\\${dir}" FILES ${file})
          else(template)
            string(REPLACE "/" "\\" dir "${dir}")
            source_group("Other\ Files\\${dir}" FILES ${file})
          endif(template)
        endif(source)
      endif(header)
    endif()
  endforeach(file ${src})
endmacro(organize_target)
